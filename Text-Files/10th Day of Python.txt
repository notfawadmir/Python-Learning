Dictionaries are used to store data 
values in key:value pairs.
A dictionary is a collection which is 
ordered*, changeable and do not allow duplicates.
As of Python version 3.7, dictionaries are
ordered. In Python 3.6 and earlier, 
dictionaries are unordered.
Dictionaries are written with curly 
brackets, and have keys and values:

EXAMPLE:
thisdict = {
  "brand": "Suzuki",
  "model": "Skoda",
  "year": 2021
}
print(thisdict)
____________________________________________________________
DICTIONARY ITEMS:
Dictionary items are ordered, changeable, 
and do not allow duplicates.

Dictionary items are presented in key:value 
pairs, and can be referred to by using the key 
name.

EXAMPLE:
thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
print(thisdict["brand"])
____________________________________________________________
ORDERED or UNORDERED?
As of Python version 3.7, dictionaries are ordered. 
In Python 3.6 and earlier, dictionaries are 
unordered.

When we say that dictionaries are ordered, it 
means 
that the items have a defined order, and that 
order 
will not change.

Unordered means that the items do not have a 
defined
order, you cannot refer to an item by using an 
index.

CHANGEABLE or mutable:
Dictionaries are changeable, meaning that we can 
change, 
add or remove items after the dictionary has 
been created. 
_____________________________________________________________
DUPLICATION:
Dictionaries cannot have two items with the same 
key:

EXAMPLE:
Duplicate values will overwrite existing values:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964,
  "year": 2020
}
print(thisdict)
_____________________________________________________________
Dictionary Length
To determine how many items a dictionary has, 
use the len() function:

EXAMPLE:
Print the number of items in the dictionary:

print(len(thisdict))
_____________________________________________________________
Dictionary Items - Data Types
The values in dictionary items can be of any data 
type:

EXAMPLE:
thisdict = {
  "brand": "Ford",
  "electric": False,
  "year": 1964,
  "colors": ["red", "white", "blue"]
}
print(thisdict)
______________________________________________________________
The dict() Constructor
It is also possible to use the dict() 
constructor to make a dictionary.

Example
Using the dict() method to make a dictionary:

thisdict = dict(name = "John", age = 36, country = "Norway")
print(thisdict)
________________________________________________________________
Accessing Items
You can access the items of a dictionary 
by referring to its key name, inside 
square brackets:

EXAMPLE:
Get the value of the "model" key:

thisdict = {
  "brand": "Ford",
  "model": "Mustang",
  "year": 1964
}
x = thisdict["model"]
_________________________________________________________________
Also use get() for getting value:
x = thisdict.get("model")
_________________________________________________________________

TASK:
1. Given two dictionaries, merge them 
into a single dictionary.
2. Create a dictionary to store information 
about a person (name, age, address). 
Add a new  key value pair to an existing 
dictionary.














__________________________________________________________________